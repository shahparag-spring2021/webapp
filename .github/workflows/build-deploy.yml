name: Build and Deploy Application

env:
    ARTIFACT_NAME: csye6225-webapp-${{ github.sha }}.zip
    CODEDEPLOY_APPLICATION_NAME: ${{ secrets.CODEDEPLOY_APPLICATION_NAME }}
    CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: ${{ secrets.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }}
    AWS_REGION: us-east-1

on:
  push:
    branches: [ main ]

jobs:
  ci_cd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build Deployment Artifact
        run: |
            echo 'inside_run'
            pwd
            ls
            mkdir codedeploy_artifact
            ls
            pwd
            zip -r ${{ env.ARTIFACT_NAME}} ./ 
            pwd
            ls -al
            mv ${{ env.ARTIFACT_NAME}} codedeploy_artifact/
            ls -al
            pwd
            cd codedeploy_artifact
            pwd
            ls -al
            cd ..
            pwd
            ls -al
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        
        
      - name: Copy Artifact to S3
        run: | 
            aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET}}
            
      - name: CodeDeploy API Call
        run: | 
            output=$(aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
            --description " CodeDeploy Deployment" \
            --region ${{ env.AWS_REGION }} \
            --output json \
            --s3-location bucket=${{ secrets.S3_CODEDEPLOY_BUCKET}},bundleType=zip,key=${{ env.ARTIFACT_NAME}})
            echo $output
            dId=$(echo $output | jq -r '.deploymentId')
            aws deploy wait deployment-successful --deployment-id $dId
